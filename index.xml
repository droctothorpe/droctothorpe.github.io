<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>a code to joy</title>
    <link>/</link>
    <description>Recent content on a code to joy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Oct 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A tail unto lions</title>
      <link>/posts/2021/10/a-tail-unto-lions/</link>
      <pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/2021/10/a-tail-unto-lions/</guid>
      <description>&amp;hellip;be a tail unto lions, and not a head unto foxes.
&amp;ndash; Ethics of our Fathers, 4:15
 I heard a remarkable anecdote on a podcast the other day.
 Admired for her beauty, Jennie Jerome (Winston Churchill’s mother) glided through the loftiest social circles in Great Britain. Once, on consecutive nights, Ms. Jerome dined with England’s premier politicians: Prime Minister Benjamin Disraeli and his chief rival, William Gladstone. When questioned about her impressions of the two men, Ms.</description>
    </item>
    
    <item>
      <title>Unconscious Algorithms</title>
      <link>/posts/2020/12/unconscious-algorithms/</link>
      <pubDate>Wed, 23 Dec 2020 16:54:37 -0500</pubDate>
      
      <guid>/posts/2020/12/unconscious-algorithms/</guid>
      <description>The goal of this article is to convey an approach to solving data structure and algorithm problems. My hope is that it helps you in a situation where you might otherwise draw a blank.
I want to start by stating an obvious but important truth: your brain is amazing. You are constantly and rapidly solving unimaginably complex problems that make even the most challenging FAANG whiteboard interview look like a stroll in the park.</description>
    </item>
    
    <item>
      <title>Expedite Golang builds in Docker</title>
      <link>/posts/2020/08/expedite-golang-builds-in-docker/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/2020/08/expedite-golang-builds-in-docker/</guid>
      <description>The problem I was recently working on a Golang API that imported the Kubernetes client. I implemented Skaffold to streamline the local development cycle, but rebuilds after source code changes consistently took 50 seconds, no matter how small the change. That&amp;rsquo;s unacceptably long, in my opinion, so I set about the task of improving the development cycle by optimizing the Docker build time.
Downloading dependencies After passing the -v flag to the go build command, I noticed that a significant length of time was spent fetching the dependencies.</description>
    </item>
    
    <item>
      <title>The coin change problem</title>
      <link>/posts/2020/07/the-coin-change-problem/</link>
      <pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/2020/07/the-coin-change-problem/</guid>
      <description>The problem https://leetcode.com/problems/coin-change/
 You are given coins of different denominations and a total amount of money. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1.
 Explanatory matrix Given the following input:
coins = 1, 2, 5 amount = 11 We can construct an explanatory matrix.</description>
    </item>
    
    <item>
      <title>ELI5: Kubernetes Operators</title>
      <link>/posts/2020/07/eli5-kubernetes-operators/</link>
      <pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/2020/07/eli5-kubernetes-operators/</guid>
      <description>Introduction I&amp;rsquo;ve been thinking about starting an ELI5 (Explain It Like I&amp;rsquo;m Five) Computer Science blog for a while now. I enjoy simplifying obscure, abstract concepts and making them intuitive and accessible. A wise friend once told me that complexity is easy; simplicity is hard. I hope this post succeeds in that goal.
If not, I can always stick to my day job.
The Kubernetes Restaurant Let&amp;rsquo;s say that you (a user) walk into a highly-regarded new restaurant named&amp;hellip;Kubernetes.</description>
    </item>
    
    <item>
      <title>Leveled logs with Cobra and Logrus</title>
      <link>/posts/2020/07/leveled-logs-with-cobra-and-logrus/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/2020/07/leveled-logs-with-cobra-and-logrus/</guid>
      <description>I recently wrote a CLI using Cobra, a widely adopted CLI framework for Golang that&amp;rsquo;s used in Kubectl, Docker, Terraform, Hugo, and other industry-standard CLIs.
I wanted to use Logrus, a highly regarded structured logging framework for Go. I wanted informative, colorized, leveled logs, but I also wanted to be able to log simple, user-facing output without all of the bells and whistles. I was surprised at the lack of documentation around this simple goal.</description>
    </item>
    
    <item>
      <title>Explain in the membrane</title>
      <link>/posts/2019/07/explain-in-the-membrane/</link>
      <pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019/07/explain-in-the-membrane/</guid>
      <description>Explainshell I stumbled into this brilliant tidbit in a post by LostCharacter on ycombinator.
Here&amp;rsquo;s the actual code:
explain () { if [ &amp;#34;$#&amp;#34; -eq 0 ] then while read -p &amp;#34;Command: &amp;#34; cmd do curl -Gs &amp;#34;https://www.mankier.com/api/explain/?cols=&amp;#34;$(tput cols) --data-urlencode &amp;#34;q=$cmd&amp;#34; done echo &amp;#34;Bye!&amp;#34; elif [ &amp;#34;$#&amp;#34; -eq 1 ] then curl -Gs &amp;#34;https://www.mankier.com/api/explain/?cols=&amp;#34;$(tput cols) --data-urlencode &amp;#34;q=$1&amp;#34; else echo &amp;#34;Usage&amp;#34; echo &amp;#34;explain interactive mode.&amp;#34; echo &amp;#34;explain &amp;#39;cmd -o | ...&amp;#39; one quoted command to explain it.</description>
    </item>
    
    <item>
      <title></title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Hello.
I&amp;rsquo;m Alex.
I write code and ideas and stuff, allegedly.
I work on a platform for distributed ML at Capital One&amp;rsquo;s Center for Machine Learning.
I live in the NYC metro area with my wife and three kiddoes.
You can find me on:
 Github LinkedIn  You can contact me via email.</description>
    </item>
    
  </channel>
</rss>